version: '3.3'

services:

  # collects block_log data, aggregates it, and saves it to redis
  python_aggregator:
    restart: always
    build: ./python
    image: eostitan/ux-resource-usage-oracle-python:1
    volumes:
      - ./python:/usr/src/app
      - "./redis:/data"
    env_file:
      - ./config.env
    command: ["python", "src/aggregator.py"]
    depends_on:
      - redis

  # aggregates test data, and saves it to redis
  python_aggregate_test_data:
    build: ./python
    image: eostitan/ux-resource-usage-oracle-python:1
    volumes:
      - ./python:/usr/src/app
      - "./redis:/data"
    env_file:
      - ./config.env
    command: ["python", "src/aggregate_test_data.py"]
    depends_on:
      - redis

  # sends aggregated data from redis to the eosjs_server for pushing to API node
  python_submitter:
    restart: always
    build: ./python
    image: eostitan/ux-resource-usage-oracle-python:1
    volumes:
      - ./python:/usr/src/app
      - "./redis:/data"
    env_file:
      - ./config.env
    command: ["python", "src/submitter.py"]
    depends_on:
      - redis
      - eosjs_server

  # provides http method to push transactions to API node
  eosjs_server:
    restart: always
    build: ./eosjs_server
    image: eostitan/ux-resource-usage-oracle-eosjs-server:1
    volumes:
      - ./eosjs_server:/home/app
      - /home/app/node_modules
    env_file:
      - ./config.env
    working_dir: /home/app
    command: ["node", "app.js"]

  # stores all usage data
  redis:
    restart: always
    image: "redis"
    volumes:
      - "./redis:/data"
    entrypoint: ["redis-server", "--save", "300", "1"]

#  redis-admin:
#    restart: always
#    image: rediscommander/redis-commander
#    environment:
#      - REDIS_HOSTS=local:resource_usage_oracle_redis:6379
#    ports:
#      - "8081:8081"
