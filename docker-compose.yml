version: '3.3'

services:

  # collects block_log data, aggregates it, and saves it to redis
  python_aggregator:
    restart: always
    build: ./python
    volumes:
      - ./python:/usr/src/app
      - "./redis:/data"
    env_file:
      - ./config.env
    command: ["python", "src/aggregator.py"]
    depends_on:
      - redis

  # sends aggregated data from redis to the eosjs_server for pushing to API node
  python_submitter:
    restart: always
    build: ./python
    volumes:
      - ./python:/usr/src/app
      - "./redis:/data"
    env_file:
      - ./config.env
    command: ["python", "src/submitter.py"]
    depends_on:
      - redis

  # provides http method to push transactions to API node
  eosjs_server:
    container_name: eosjsserver
    restart: always
    build: ./eosjs_server
    volumes:
      - ./eosjs_server:/home/app
      - /home/app/node_modules
    env_file:
      - ./config.env
    working_dir: /home/app
    command: ["node", "app.js"]

  # stores all usage data
  redis:
    container_name: resource_usage_oracle_redis
    restart: always
    image: "redis"
    volumes:
      - "./redis:/data"
    entrypoint: ["redis-server", "--save", "300", "1"]

  redis-admin:
    restart: always
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=local:resource_usage_oracle_redis:6379
    ports:
      - "8081:8081"
